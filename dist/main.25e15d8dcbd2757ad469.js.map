{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isTouchDevice","document","documentElement","$","body","addClass","stateData","countyData","usData","lastData","stateToFipsMap","stateFeatures","stateBorders","countyFeatures","filters","state","field","time","useLog","per100k","consistentY","firstCasesDate","Date","lastCasesDate","tooltipValue","tooltipShown","tooltipHideTimer","isTestingData","dataPointLabels","cases","deaths","tests","positive","pending","negative","newCases","newDeaths","newTests","newPositive","newNegative","pop","keys","forEach","k","per100kKey","mapDataPointLabels","indexOf","replace","fieldHasMovingAverage","timeLabels","all","countyLabelToFips","populationOverrides","fipsRemapping","filterKeys","filterDefaults","parseQs","qs","query","substring","vars","split","obj","map","decodeURIComponent","v","stringifyQs","encodeURIComponent","join","router","hist","this","history","listen","parse","fetchAndRenderStates","fetchAndRenderCounties","firstParse","location","search","qsKey","undefined","val","prop","show","hide","text","_update","action","getValueKeys","withTesting","valueKeys","processPopulations","assign","fips","parseInt","processGroups","groups","popMap","hasTesting","group","newRows","row","values","date","year","month","county","parsed","Number","p100kFactor","noPopulation","getTime","filterData","datesToShow","hasTestingData","allValueKeys","concat","maKeys","extents","extentKeys","maStartDate","setDate","getDate","dateAccessor","g","startDate","endDate","last","curDate","valuesIndex","sortedIndexBy","maWindows","isWithinRange","nextValue","matchingValue","maValues","arr","maKey","d3mean","extent","maValue","filterGridData","memoizeOne","filterOverviewData","mapRenderCount","render","daysToShow","b","a","utc1","utc2","overview","isCounties","stateFips","UTC","getFullYear","getMonth","Math","floor","nextDate","unshift","overviewData","gridData","options","$overview","d3select","node","getBoundingClientRect","width","height","$cell","select","selectAll","remove","useLarge","innerWidth","yAxisWidth","chartWidth","chartHeight","attr","renderCharts","allowDrilldown","cellLabelX","cellLabelY","barPad","renderOverview","$svg","chartXPadding","chartYPadding","estChartWidth","numCols","numStates","xAxisHeight","winWidth","colWidth","rowHeight","numRows","ceil","totalHeight","sortVal","d3sum","lastVal","findLast","sort","d3range","enter","append","each","numColsForRow","range","col","classed","renderGrid","_mapRenderCount","fetchMapData","then","$map","mapWidth","mapHeight","projection","d3geoAlbersUsa","translate","scale","path","d3geoPath","fieldTitle","timeTitle","$g","countyFeaturesFiltered","_stateFips","String","filter","f","id","stateFeaturesFiltered","hasMapData","Boolean","style","joinedData","features","byFips","hasTests","fields","label","positivePct","negativePct","newPending","pendingPct","newPositivePct","newNegativePct","feature","aggMapData","domain","min","d3min","colorScale","scaleCluster","mapColors","fillColor","datum","clusters","$item","update","exit","css","formatNumNice","renderMapLegend","$states","transition","duration","isFirstMapRender","$counties","$features","onMouseEnter","evt","d3event","showTooltip","title","subtitle","fieldLabels","showMapTooltip","$backdrop","on","setStateFilter","stopPropagation","hideTooltipSoon","$gSel","bounds","xWidth","yHeight","xCenter","yCenter","max","renderMap","reverse","yScaleType","d3scaleLog","d3scaleLinear","xScale","d3scaleBand","paddingInner","paddingOuter","barWidth","bandwidth","barXMidpoints","makeYScale","extentMin","nice","makeAxis","domainMax","numTicks","ticks","d3axisLeft","tickSizeInner","tickSizeOuter","tickFormat","yScale","yAxis","$cells","counter","index","stackFields","cellYScale","cellYAxis","d3extent","maField","maExtent","stack","d3stack","y","isNaN","renderLine","$crosshair","$hover","onMouseMove","onClick","yProperty","classes","xOffset","line","d3line","x","round","curve","d3curveMonotoneX","xPos","d3mouse","bisectIndex","d3bisectLeft","left","right","abs","find","chPos","formatTooltipDate","showChartTooltip","scrollUpTo","formatXDate","clearTimeout","pageX","pageY","clientY","top","bottom","transform","winHeight","innerHeight","bodyHeight","fitsLeft","fitsRight","fitsTop","fitsBottom","dataPoints","hasPercents","columnClass","color","pct","dp","suffix","formatter","formatPer100kValue","dataPointEl","format","formatTooltipValue","dpValue","pctFmt","drilldownMsg","toggleClass","html","setTimeout","hideTooltip","removeClass","toLocaleString","day","precision","abbrev","parseFloat","toPrecision","tooltipFmtPer100k","d3format","tooltipFmtPer100kSmall","tooltipFmt","selector","el","querySelector","scrollIntoView","scrollTo","behavior","block","loadingCount","startLoading","completeLoading","resizeWindow","throttle","promise","d3json","us","topojson","objects","states","counties","addEventListener","fetchStatePopulationsMemo","Promise","resolve","reject","d3csv","popCsv","catch","fetchCountyPopulationsMemo","fetchStateDataMemo","timeFilter","file","csv","processed","d3nest","entries","processStates","populateStateSelect","populated","stateOptions","localeCompare","fetchCountyDataMemo","fetchStateData","timeDir","nestedStates","stateMap","byCounty","processCounties","Error","error","console","fetchCountyData","countiesForState","renderCounties","change","click","is"],"mappings":"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","file":"main.25e15d8dcbd2757ad469.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"Vtdi\",1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {nest as d3nest} from 'd3-collection';\nimport {stack as d3stack, line as d3line, curveMonotoneX as d3curveMonotoneX} from 'd3-shape';\nimport {format as d3format} from 'd3-format';\nimport {json as d3json, csv as d3csv} from 'd3-fetch';\nimport {\n  mean as d3mean,\n  sum as d3sum,\n  min as d3min,\n  range as d3range,\n  extent as d3extent,\n  bisectLeft as d3bisectLeft,\n} from 'd3-array';\nimport {select as d3select, mouse as d3mouse, event as d3event} from 'd3-selection';\nimport {axisLeft as d3axisLeft} from 'd3-axis';\nimport {\n  scaleBand as d3scaleBand,\n  scaleLog as d3scaleLog,\n  scaleLinear as d3scaleLinear,\n} from 'd3-scale';\nimport {geoAlbersUsa as d3geoAlbersUsa, geoPath as d3geoPath} from 'd3-geo';\nimport scaleCluster from 'd3-scale-cluster';\nimport memoizeOne from 'memoize-one';\nimport throttle from 'lodash/throttle';\nimport findLast from 'lodash/findLast';\nimport sortedIndexBy from 'lodash/sortedIndexBy';\nimport $ from 'jquery';\nimport * as history from 'history';\nimport * as topojson from 'topojson-client';\nimport './style.css';\nimport 'd3-transition';\n\n(function () {\n  const isTouchDevice = 'ontouchstart' in document.documentElement;\n  if (isTouchDevice) {\n    $(document.body).addClass('touch');\n  }\n\n  // Data\n  let stateData = null;\n  let countyData = null;\n  let usData = null;\n  let lastData = null;\n\n  let stateToFipsMap = {};\n\n  // Map features\n  let stateFeatures = null;\n  let stateBorders = null;\n  let countyFeatures = null;\n\n  // Filter values\n  const filters = {\n    state: 'all',\n    field: 'newCases',\n    time: '14d',\n    useLog: false,\n    per100k: false,\n    consistentY: true,\n  };\n\n  // UI state\n  let firstCasesDate = new Date(2020, 0, 21);\n  let lastCasesDate = null;\n  let tooltipValue = null;\n  let tooltipShown = null;\n  let tooltipHideTimer = null;\n  let isTestingData = false;\n\n  ///////////////\n  // Constants //\n  ///////////////\n\n  const dataPointLabels = {\n    cases: 'Total Cases',\n    deaths: 'Total Deaths',\n    tests: 'Total Tests',\n    positive: 'Total Positive',\n    pending: 'Total Pending',\n    negative: 'Total Negative',\n    newCases: 'New Cases',\n    newDeaths: 'New Deaths',\n    newTests: 'New Tests',\n    newPositive: 'New Positive',\n    newNegative: 'New Negative',\n    pop: 'Est. Population',\n  };\n  Object.keys(dataPointLabels).forEach((k) => {\n    dataPointLabels[per100kKey(k)] = dataPointLabels[k];\n  });\n\n  // On the map, \"daily new\" fields are averages\n  const mapDataPointLabels = {...dataPointLabels};\n  Object.keys(mapDataPointLabels).forEach((key) => {\n    if (key.indexOf('new') === 0) {\n      mapDataPointLabels[key] = `Avg ${mapDataPointLabels[key].replace('New', 'Daily')}`;\n    }\n  });\n\n  const fieldHasMovingAverage = {\n    newCases: true,\n    newDeaths: true,\n    [per100kKey('newCases')]: true,\n    [per100kKey('newDeaths')]: true,\n  };\n\n  const timeLabels = {\n    '7d': 'Last 7 days',\n    '14d': 'Last 14 days',\n    '1mo': 'Last 30 days',\n    '90d': 'Last 90 days',\n    all: 'All-time',\n  };\n\n  const MA_NUM_DAYS = 7;\n\n  const KANSAS_CITY_FAKE_FIPS = '29999';\n\n  // https://github.com/nytimes/covid-19-data#geographic-exceptions\n  const countyLabelToFips = {\n    'New York City': '36061',\n    'Kansas City': KANSAS_CITY_FAKE_FIPS,\n  };\n\n  const populationOverrides = {\n    // Kansas City, MO edge cases. City is not a real county, it overlaps\n    // with four other counties. Mayor posted a tweet with population estimates\n    // for the city overall, and the parts of the counties that fall within the city.\n    // https://twitter.com/QuintonLucasKC/status/1249756319805997058\n    [KANSAS_CITY_FAKE_FIPS]: 505604,\n    // Cass County, MO\n    '29037': 103610 - 85,\n    // Jackson County, MO\n    '29095': 700307 - 313870,\n    // Clay County, MO\n    '29047': 246365 - 137446,\n    // Platte County, MO\n    '29165': 102985 - 54202,\n\n    // New York City - Sum of the 5 boroughs due to NYT geographic exception\n    '36061': 8336817,\n  };\n\n  const fipsRemapping = {\n    // Bronx -> NY\n    '36005': '36061',\n    // Kings -> NY,\n    '36047': '36061',\n    // Queens -> NY\n    '36081': '36061',\n    // Richmond -> NY\n    '36085': '36061',\n  };\n\n  ////////////\n  // Router //\n  ////////////\n\n  const filterKeys = {\n    state: 'state',\n    field: 'field',\n    time: 'time',\n    useLog: 'log',\n    per100k: 'per100k',\n    consistentY: 'consistentY',\n  };\n  const filterDefaults = {\n    state: 'all',\n    field: 'newCases',\n    time: '14d',\n    useLog: false,\n    per100k: false,\n    consistentY: true,\n  };\n\n  class Router {\n    constructor(hist) {\n      this.history = hist;\n      this.history.listen(() => {\n        // Update filter state variables and re-render\n        this.parse();\n        if (filters.state === 'all') {\n          fetchAndRenderStates();\n        } else {\n          fetchAndRenderCounties(filters.state);\n        }\n      });\n    }\n\n    parse(firstParse = false) {\n      const qs = parseQs(this.history.location.search);\n      const keys = Object.keys(filterKeys);\n\n      for (let i = 0; i < keys.length; i++) {\n        const k = keys[i];\n        const qsKey = filterKeys[k];\n        let v = qs[qsKey] != undefined ? qs[qsKey] : filterDefaults[k];\n        // Coerce boolean filter values from string to boolean\n        if (typeof filterDefaults[k] === 'boolean' && typeof v === 'string') {\n          v = v === '1';\n        }\n        if (filters[k] === v && !firstParse) {\n          continue;\n        }\n        switch (k) {\n          case 'state': {\n            // Somehow URLs with plus instead of space are being used\n            v = v.replace('+', ' ');\n            filters.state = v;\n            $('#state-select').val(v);\n            break;\n          }\n          case 'field': {\n            if (dataPointLabels[v]) {\n              filters.field = v;\n              $('#field-select').val(v);\n\n              isTestingData = filters.field === 'tests' || filters.field === 'newTests';\n              if (isTestingData) {\n                // Disable useLog if switching to testing data\n                filters.useLog = false;\n                $('#cb-use-log-scale').prop('checked', false);\n                qs[filterKeys.useLog] = '0';\n\n                $('.testing-legend').show();\n                $('#filter-use-log-scale').hide();\n              } else {\n                $('.testing-legend').hide();\n                $('#filter-use-log-scale').show();\n              }\n              if (v === 'newCases' || v === 'newDeaths') {\n                $('.ma-legend .legend-field-label').text(dataPointLabels[v]);\n                $('.ma-legend').show();\n              } else {\n                $('.ma-legend').hide();\n              }\n            }\n            break;\n          }\n          case 'time': {\n            filters.time = v;\n            $('#time-select').val(v);\n            break;\n          }\n          case 'useLog': {\n            filters.useLog = v;\n            $('#cb-use-log-scale').prop('checked', v);\n            break;\n          }\n          case 'per100k': {\n            filters.per100k = v;\n            $('#cb-per-100k').prop('checked', v);\n            break;\n          }\n          case 'consistentY': {\n            filters.consistentY = v;\n            $('#cb-consistent-y').prop('checked', v);\n            break;\n          }\n        }\n      }\n    }\n\n    push(obj) {\n      this._update('push', obj);\n    }\n\n    replace(obj) {\n      this._update('replace', obj);\n    }\n\n    _update(action, obj) {\n      const query = {\n        ...parseQs(this.history.location.search),\n        ...obj,\n      };\n      this.history[action]({\n        search: stringifyQs(query),\n      });\n    }\n  }\n\n  function parseQs(qs) {\n    const query = qs[0] === '?' ? qs.substring(1) : qs;\n    const vars = query ? query.split('&') : [];\n    const obj = {};\n    for (let i = 0; i < vars.length; i++) {\n      const [k, v] = vars[i].split('=').map(decodeURIComponent);\n      obj[k] = v;\n    }\n    return obj;\n  }\n  function stringifyQs(obj) {\n    const result = Object.keys(obj)\n      .map((k) => {\n        return `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`;\n      })\n      .join('&');\n    return result ? `?${result}` : '';\n  }\n  const router = new Router(history.createBrowserHistory());\n  router.parse(true);\n\n  /////////////////////\n  // Data Processing //\n  /////////////////////\n\n  function getValueKeys(withTesting) {\n    const valueKeys = ['cases', 'deaths', 'newCases', 'newDeaths'];\n    if (withTesting) {\n      valueKeys.push(\n        'positive',\n        'negative',\n        'pending',\n        'tests',\n        'newPositive',\n        'newNegative',\n        'newTests',\n      );\n    }\n    return valueKeys;\n  }\n\n  function processStates(csv, popMap) {\n    const nestedStates = d3nest()\n      .key((k) => k.state)\n      .entries(csv);\n\n    const processed = processGroups(nestedStates, popMap, true);\n\n    stateData = [];\n    processed.forEach((group) => {\n      if (group.key === 'US') {\n        group.key = 'United States';\n        usData = [group];\n      } else {\n        if (!stateToFipsMap[group.key]) {\n          stateToFipsMap[group.key] = group.values[0].fips;\n        }\n        stateData.push(group);\n      }\n    });\n  }\n\n  function coerceNumber(value) {\n    return value == undefined ? null : Number(value);\n  }\n\n  function processCounties(csv, popMap) {\n    // First nest counties by state\n    const nestedStates = d3nest()\n      .key((k) => k.state)\n      .entries(csv);\n\n    const stateMap = {};\n\n    nestedStates.forEach((state) => {\n      const counties = d3nest()\n        .key((k) => k.county)\n        .entries(state.values);\n      const byCounty = processGroups(counties, popMap, false);\n      stateMap[state.key] = {key: state.key, counties: byCounty};\n    });\n\n    countyData = stateMap;\n  }\n\n  function processPopulations(pop) {\n    const map = Object.assign({}, populationOverrides);\n    pop.forEach((p) => {\n      const fips = fipsRemapping[p.fips] || p.fips;\n      if (populationOverrides[fips]) {\n        map[fips] = populationOverrides[fips];\n      } else {\n        map[fips] = parseInt(p.pop);\n      }\n    });\n    return map;\n  }\n\n  function processGroups(groups, popMap, hasTesting) {\n    const valueKeys = getValueKeys(hasTesting);\n\n    groups.forEach((group) => {\n      const newRows = [];\n      for (let i = 0; i < group.values.length; i++) {\n        const row = group.values[i];\n        const [year, month, date] = row.date.split('-');\n\n        let fips = row.fips;\n        if (!fips && row.county) {\n          fips = countyLabelToFips[row.county];\n        }\n\n        const parsed = {\n          ...row,\n          fips,\n          date: new Date(Number(year), Number(month) - 1, Number(date)),\n          cases: Number(row.cases),\n          deaths: Number(row.deaths),\n          newCases: Number(row.newCases),\n        };\n        valueKeys.forEach((key) => {\n          parsed[key] = coerceNumber(parsed[key]);\n        });\n\n        newRows.push(parsed);\n\n        // Add population-normalized data\n        const pop = popMap[parsed.fips];\n        if (pop) {\n          parsed.pop = pop;\n          const p100kFactor = pop / 1e5;\n          valueKeys.forEach((key) => {\n            if (typeof parsed[key] === 'number') {\n              parsed[per100kKey(key)] = parsed[key] / p100kFactor;\n            }\n          });\n        } else {\n          group.noPopulation = true;\n        }\n\n        if (lastCasesDate === null || parsed.date.getTime() > lastCasesDate.getTime()) {\n          lastCasesDate = parsed.date;\n        }\n      }\n      group.values = newRows;\n    });\n\n    return groups;\n  }\n\n  function filterData(groups, datesToShow, hasTestingData) {\n    const valueKeys = getValueKeys(hasTestingData);\n    const allValueKeys = valueKeys.concat(valueKeys.map(per100kKey));\n\n    // Keys for which to compute moving averages\n    let maKeys = ['newCases', 'newDeaths'];\n    maKeys = maKeys.concat(maKeys.map(per100kKey));\n\n    const extents = {};\n    const extentKeys = ['date'].concat(allValueKeys);\n    extentKeys.forEach((key) => (extents[key] = [null, null]));\n\n    const maStartDate = new Date(datesToShow[0]);\n    maStartDate.setDate(maStartDate.getDate() - MA_NUM_DAYS);\n\n    const dateAccessor = (v) => v.date.getTime();\n\n    const newGroups = groups.map((g) => {\n      const {values} = g;\n      const newRows = [];\n\n      // Start/end date of the visualized range\n      let startDate = datesToShow[0];\n      let endDate = last(datesToShow);\n      // However we start 7 days before to calculate moving averages\n      let curDate = new Date(maStartDate);\n\n      // Using sortedIndexBy to binary search for the index where our dates start\n      let valuesIndex = sortedIndexBy(values, {date: maStartDate}, dateAccessor);\n\n      // Data structure to store our N-day moving average window for each field\n      let maWindows = {};\n      maKeys.forEach((key) => {\n        maWindows[key] = [];\n      });\n\n      while (curDate.getTime() <= endDate.getTime()) {\n        // Is this date within our visualized range?\n        let isWithinRange = curDate.getTime() >= startDate.getTime();\n\n        // Peek at the next value in our values array – is there a value for the current date?\n        let nextValue = values[valuesIndex];\n        let matchingValue =\n          nextValue && nextValue.date.getTime() === curDate.getTime() ? nextValue : null;\n\n        // First update moving averages\n        let maValues = {};\n        maKeys.forEach((key) => {\n          const arr = maWindows[key];\n          if (arr.length === MA_NUM_DAYS) {\n            arr.shift();\n          }\n          // If there is data for the current date/field combo, use that.\n          if (matchingValue && typeof matchingValue[key] === 'number') {\n            arr.push(nextValue[key]);\n          } else {\n            arr.push(0);\n          }\n          // Store today's moving average as the mean of our moving average window\n          maValues[maKey(key)] = d3mean(arr);\n        });\n\n        // For dates that will be visualized, push a value into the newRows array\n        if (isWithinRange) {\n          if (matchingValue) {\n            newRows.push(Object.assign({}, matchingValue, maValues));\n          } else {\n            // If there was no matching value for today, all we have is a moving average,\n            // just generate a fake data point with the average values\n            newRows.push(\n              Object.assign(\n                {\n                  date: new Date(curDate),\n                  fips: values[0].fips,\n                  pop: values[0].pop,\n                  state: values[0].state,\n                  county: values[0].county,\n                },\n                maValues,\n              ),\n            );\n          }\n        }\n\n        // If current index of values array was a match for this date, we want to move to next.\n        if (matchingValue) {\n          valuesIndex++;\n        }\n\n        // Make next loop iteration use tomorrow's date\n        curDate.setDate(curDate.getDate() + 1);\n      }\n\n      // Update the extents object\n      newRows.forEach((row) => {\n        extentKeys.forEach((key) => {\n          const extent = extents[key];\n          const value = row[key];\n          if (value != undefined && (extent[0] === null || value < extent[0])) {\n            extent[0] = value;\n          }\n          if (value != undefined && (extent[1] === null || value > extent[1])) {\n            extent[1] = value;\n          }\n          // Account for moving averages in the extent\n          if (fieldHasMovingAverage[key]) {\n            const maValue = row[maKey(key)];\n            if (maValue != undefined && (extent[1] === null || maValue > extent[1])) {\n              extent[1] = maValue;\n            }\n          }\n        });\n      });\n\n      return {\n        ...g,\n        values: newRows,\n      };\n    });\n\n    return {groups: newGroups, extents};\n  }\n\n  const filterGridData = memoizeOne(filterData);\n  const filterOverviewData = memoizeOne(filterData);\n\n  function per100kKey(key) {\n    return `${key}_p100k`;\n  }\n\n  function maKey(key) {\n    return `${key}_ma`;\n  }\n\n  function last(arr) {\n    return arr[arr.length - 1];\n  }\n\n  let mapRenderCount = 0;\n  function render(data) {\n    lastData = data;\n    const {groups, overview, isCounties, stateFips} = data;\n\n    const field = filters.per100k ? per100kKey(filters.field) : filters.field;\n\n    let daysToShow;\n    if (filters.time === '7d') {\n      daysToShow = 7;\n    } else if (filters.time === '14d') {\n      daysToShow = 14;\n    } else if (filters.time === '1mo') {\n      daysToShow = 30;\n    } else if (filters.time === '90d') {\n      daysToShow = 90;\n    } else {\n      daysToShow = dateDiffInDays(lastCasesDate, firstCasesDate);\n    }\n    const datesToShow = [lastCasesDate];\n    for (let i = 1; i < daysToShow; i++) {\n      const nextDate = new Date(lastCasesDate);\n      nextDate.setDate(lastCasesDate.getDate() - i);\n      datesToShow.unshift(nextDate);\n    }\n\n    if (isCounties && isTestingData) {\n      $('#viz').hide();\n      $('.testing-data-unavailable').show();\n      return;\n    } else {\n      $('#viz').show();\n      $('.testing-data-unavailable').hide();\n    }\n\n    const overviewData = filterOverviewData(overview, datesToShow, true);\n    const gridData = filterGridData(groups, datesToShow, !isCounties);\n\n    const options = {\n      field,\n      daysToShow,\n      datesToShow,\n      isCounties,\n      stateFips,\n    };\n\n    renderOverview(overviewData, options);\n    renderGrid(gridData, options);\n\n    // Render map after fetching map data (debounce the render calls)\n    const _mapRenderCount = ++mapRenderCount;\n    fetchMapData().then(() => {\n      if (_mapRenderCount === mapRenderCount) {\n        renderMap(gridData, options);\n      }\n    });\n  }\n\n  function aggMapData(groups, features) {\n    const byFips = {};\n\n    const hasTests = groups[0].values[0].tests != undefined;\n    const fields = getValueKeys(hasTests);\n\n    groups.forEach((group) => {\n      const {values} = group;\n      if (!values.length) {\n        return;\n      }\n      const {fips, pop} = values[0];\n\n      // Just aggregate the number of new cases/etc across the selected time range\n      let value = {\n        fips,\n        pop,\n        label: group.key,\n        // New cases/deaths over last N days\n        cases: d3sum(values, (v) => v.newCases),\n        deaths: d3sum(values, (v) => v.newDeaths),\n        // Average of new daily cases/deahts over last N days\n        newCases: d3mean(values, (v) => v.newCases),\n        newDeaths: d3mean(values, (v) => v.newDeaths),\n      };\n\n      if (hasTests) {\n        value.tests = d3sum(values, (v) => v.newTests);\n        value.positive = d3sum(values, (v) => v.newPositive);\n        value.positivePct = value.positive / value.tests;\n        value.negative = d3sum(values, (v) => v.newNegative);\n        value.negativePct = value.negative / value.tests;\n        value.pending = d3sum(values, (v) => v.newPending);\n        value.pendingPct = value.pending / value.tests;\n        value.newTests = d3mean(values, (v) => v.newTests);\n        value.newPositive = d3mean(values, (v) => v.newPositive);\n        value.newPositivePct = value.newPositive / value.newTests;\n        value.newNegative = d3mean(values, (v) => v.newNegative);\n        value.newNegativePct = value.newNegative / value.newTests;\n      }\n\n      const p100kFactor = pop / 1e5;\n      fields.forEach((field) => {\n        if (typeof value[field] === 'number') {\n          value[per100kKey(field)] = value[field] / p100kFactor;\n        }\n      });\n\n      byFips[Number(fips)] = value;\n    });\n\n    return features.map((f) => {\n      const fips = fipsRemapping[f.id] || f.id;\n      const data = byFips[fips];\n      return {\n        id: f.id,\n        feature: f,\n        ...data,\n      };\n    });\n  }\n\n  // https://gka.github.io/palettes/#/7|s|49006a,9b59b6,ffd09f|ffffe0,ff005e,93003a|1|1\n  const mapColors = [\n    '#49006a',\n    '#672682',\n    '#874694',\n    '#a666a0',\n    '#c588a6',\n    '#e3aba6',\n    '#ffd09f',\n  ].reverse();\n  const mapNoDataColor = '#999';\n\n  let isFirstMapRender = true;\n  function renderMap(data, options) {\n    const {field, isCounties, stateFips} = options;\n    const {groups} = data;\n\n    const allowDrilldown = !isCounties;\n\n    const $map = d3select('#svg-map');\n    const {width, height} = $map.node().getBoundingClientRect();\n    const mapWidth = width;\n    const mapHeight = height;\n\n    const projection = d3geoAlbersUsa()\n      .translate([mapWidth / 2, mapHeight / 2])\n      .scale(mapWidth);\n    const path = d3geoPath().projection(projection);\n\n    const fieldTitle = mapDataPointLabels[field];\n    const timeTitle = timeLabels[filters.time];\n    d3select('#map-title').text(`Map of ${fieldTitle}, ${timeTitle}`);\n\n    const $g = $map.select('#map-g').attr('width', mapWidth).attr('height', mapHeight);\n\n    let countyFeaturesFiltered = [];\n    if (isCounties) {\n      const _stateFips = String(Number(stateFips));\n      countyFeaturesFiltered = countyFeatures.filter((f) => {\n        const fips = String(f.id);\n        return _stateFips === fips.substring(0, fips.length === 4 ? 1 : 2);\n      });\n    }\n\n    let stateFeaturesFiltered = isCounties\n      ? stateFeatures.filter((f) => f.id === Number(stateFips))\n      : stateFeatures;\n\n    const hasMapData = Boolean(stateFeaturesFiltered.length);\n    d3select('#map-no-data').classed('shown', !hasMapData);\n    d3select('#viz-map-header').style('opacity', hasMapData ? 1 : 0);\n\n    const joinedData = aggMapData(\n      groups,\n      isCounties ? countyFeaturesFiltered : stateFeaturesFiltered,\n    );\n\n    const domain = [];\n    joinedData.forEach((d) => {\n      const value = d[field];\n      if (typeof value === 'number' && value > 0) {\n        domain.push(value);\n      }\n    });\n    if (domain.length === 0) {\n      domain.push(1);\n    }\n    const min = d3min(domain);\n    const colorScale = scaleCluster().domain(domain).range(mapColors);\n    const clusters = colorScale.clusters();\n    renderMapLegend(clusters, min);\n\n    function fillColor(d) {\n      const datum = d[field];\n      return datum != undefined && datum !== 0 ? colorScale(datum) : mapNoDataColor;\n    }\n\n    const $states = $g\n      .select('#map-states')\n      .selectAll('.map-state')\n      .data(isCounties ? stateFeaturesFiltered : joinedData, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('opacity', 0).attr('class', 'map-state map-feat'),\n        (update) => update,\n        (exit) => {\n          exit.transition().duration(350).attr('opacity', 0).remove();\n        },\n      );\n\n    $states\n      .attr('d', (d) => path(d.feature))\n      .transition()\n      .duration(isFirstMapRender ? 0 : 350)\n      .attr('opacity', 1)\n      .attr('fill', isCounties ? mapNoDataColor : fillColor);\n\n    const $counties = $g\n      .select('#map-counties')\n      .selectAll('.map-county')\n      .data(isCounties ? joinedData : [], (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('opacity', 0)\n            .attr('class', (d) => `map-county map-county-${d.id} map-feat`),\n        (update) => update,\n        (exit) => {\n          exit.transition().duration(350).attr('opacity', 0).remove();\n        },\n      )\n      .attr('d', (d) => path(d.feature))\n      .attr('fill', fillColor);\n\n    $counties\n      .transition()\n      .duration(isFirstMapRender ? 0 : 350)\n      .attr('opacity', 1);\n\n    $g.select('#map-state-borders')\n      .datum(stateBorders)\n      .attr('d', path)\n      .attr('opacity', isCounties ? 0 : 1);\n\n    const $features = isCounties ? $counties : $states;\n\n    function onMouseEnter(d) {\n      const evt = d3event;\n      if (d.label) {\n        showMapTooltip({value: d, field, evt, allowDrilldown: allowDrilldown && !isTestingData});\n      }\n    }\n\n    const $backdrop = d3select('#map-backdrop');\n    $backdrop.attr('width', width).attr('height', height);\n    $backdrop.on('click', () => {\n      if (isCounties) {\n        setStateFilter('all');\n      }\n    });\n\n    if (isTouchDevice) {\n      $features\n        .on('click', (d) => {\n          // Dont let this bubble up to document click\n          d3event.stopPropagation();\n          onMouseEnter(d);\n        })\n        .on('mouseleave', () => {\n          hideTooltipSoon();\n        });\n    } else {\n      $features\n        .on('click', (d) => {\n          if (allowDrilldown) {\n            setStateFilter(d.label);\n          } else {\n            setStateFilter('all');\n          }\n        })\n        .on('mouseenter', onMouseEnter)\n        .on('mouseleave', () => {\n          hideTooltipSoon();\n        });\n    }\n\n    // Zoom to the correct location (anaimated on subsequent renders)\n    const $gSel = isFirstMapRender ? $g : $g.transition().duration(750);\n    if (isCounties && stateFeaturesFiltered.length) {\n      const bounds = isCounties ? path.bounds(stateFeaturesFiltered[0]) : null;\n      const xWidth = bounds[1][0] - bounds[0][0];\n      const yHeight = bounds[1][1] - bounds[0][1];\n      const xCenter = (bounds[0][0] + bounds[1][0]) / 2;\n      const yCenter = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = 0.9 / Math.max(xWidth / mapWidth, yHeight / mapHeight);\n      const translate = [mapWidth / 2 - scale * xCenter, mapHeight / 2 - scale * yCenter];\n      $gSel.attr('transform', 'translate(' + translate + ')scale(' + scale + ')');\n    } else {\n      $gSel.attr('transform', 'translate(0)scale(1)');\n    }\n\n    isFirstMapRender = false;\n  }\n\n  function renderMapLegend(clusters, min) {\n    const $legend = d3select('#map-legend');\n    $legend\n      .selectAll('.map-legend-item')\n      .data([0, min].concat(clusters))\n      .join(\n        (enter) => {\n          const $item = enter.append('div').attr('class', 'map-legend-item');\n          $item.append('div').classed('map-legend-item-label', true);\n          return $item;\n        },\n        (update) => update,\n        (exit) => exit.remove(),\n      )\n      .each(function (d, i) {\n        $(this).css('background-color', i === 0 ? mapNoDataColor : mapColors[i - 1]);\n      })\n      .select('.map-legend-item-label')\n      .text((d) => formatMapLegendTick(d));\n  }\n\n  function renderOverview(data, options) {\n    const $overview = d3select('#svg-overview');\n    const {width, height} = $overview.node().getBoundingClientRect();\n\n    const $cell = $overview.select('g.cell');\n    $cell.selectAll('*').remove();\n\n    const useLarge = window.innerWidth >= 1024;\n    const yAxisWidth = useLarge ? 40 : 30;\n    const xAxisHeight = useLarge ? 20 : 14;\n    const marginRight = 16;\n    const cellLabelX = 6;\n    const cellLabelY = 0;\n    const chartWidth = width - yAxisWidth - marginRight;\n    const chartHeight = height - xAxisHeight;\n\n    $cell.attr('transform', `translate(${yAxisWidth}, 0)`);\n\n    renderCharts($overview, data, {\n      ...options,\n      allowDrilldown: false,\n      chartWidth,\n      chartHeight,\n      cellLabelX,\n      cellLabelY,\n      barPad: 3,\n    });\n  }\n\n  function renderGrid(data, options) {\n    const {field, daysToShow} = options;\n\n    const $svg = d3select('#grid');\n    // Make sure  we're starting fresh\n    $svg.selectAll('*').remove();\n    $svg.attr('class', filters.consistentY ? 'consistent-y' : '');\n\n    const groups = data.groups.slice(0);\n\n    const useLarge = window.innerWidth >= 1024;\n    const chartAspectRatio = 2.15;\n    const chartXPadding = useLarge ? 30 : 25;\n    const chartYPadding = useLarge ? 40 : 35;\n    const estChartWidth = useLarge ? 250 : 150;\n    const numCols = Math.floor(window.innerWidth / (estChartWidth + chartXPadding));\n    const chartWidth = Math.floor((window.innerWidth - chartXPadding * (numCols + 1)) / numCols);\n\n    const cellLabelX = -20;\n    const cellLabelY = -10;\n    const numStates = groups.length;\n    const chartHeight = Math.floor(chartWidth / chartAspectRatio);\n    const yAxisWidth = useLarge ? 40 : 30;\n    const xAxisHeight = useLarge ? 20 : 14;\n    const winWidth = window.innerWidth;\n    const barPad = daysToShow > 10 ? 1 : 2;\n\n    const colWidth = chartWidth + chartXPadding;\n    const rowHeight = chartHeight + xAxisHeight + chartYPadding;\n\n    const numRows = Math.ceil(numStates / numCols);\n\n    const totalHeight = numRows * rowHeight;\n\n    const allowDrilldown = !options.isCounties;\n\n    groups.forEach((g) => {\n      if (field.indexOf('new') === 0) {\n        // For daily new cases / deaths, sort by the sum of the data currently being shown\n        g.sortVal = d3sum(g.values, (v) => v[field]);\n      } else {\n        // Otherwise sort by the last shown cumulative value\n        const lastVal = findLast(g.values, (v) => v[field] != undefined);\n        g.sortVal = lastVal ? lastVal[field] : -1;\n      }\n    });\n    groups.sort((a, b) => b.sortVal - a.sortVal);\n\n    // Create grid of rows and columns\n    const $rows = $svg\n      .attr('viewBox', [0, 0, winWidth, totalHeight])\n      .selectAll('g.row')\n      .data(d3range(numRows))\n      .enter()\n      .append('g')\n      .attr('class', 'row')\n      .attr('transform', (row) => `translate(${yAxisWidth}, ${row * rowHeight})`);\n\n    // Add cells\n    $rows.each(function (row) {\n      const lastItemNumber = (row + 1) * numCols;\n      const numColsForRow = lastItemNumber > groups.length ? groups.length % numCols : numCols;\n      const range = d3range(numColsForRow).map((i) => ({row, col: i}));\n      d3select(this)\n        .selectAll('g.cell')\n        .data(range)\n        .enter()\n        .append('g')\n        .attr('class', 'cell')\n        .classed('cell-clickable', allowDrilldown && !isTestingData)\n        .attr('transform', (d) => `translate(${d.col * colWidth}, 0)`);\n    });\n\n    renderCharts(\n      $svg,\n      {\n        ...data,\n        groups,\n      },\n      {\n        ...options,\n        allowDrilldown,\n        chartWidth,\n        chartHeight,\n        cellLabelX,\n        cellLabelY,\n        barPad,\n      },\n    );\n  }\n\n  function renderCharts($svg, data, options) {\n    const {\n      field,\n      daysToShow,\n      datesToShow,\n      allowDrilldown,\n      chartWidth,\n      chartHeight,\n      cellLabelX,\n      cellLabelY,\n      barPad,\n    } = options;\n    const {groups, extents} = data;\n\n    const yScaleType = filters.useLog ? d3scaleLog : d3scaleLinear;\n\n    const xScale = d3scaleBand()\n      .domain(d3range(datesToShow.length))\n      [daysToShow >= 90 ? 'range' : 'rangeRound']([0, chartWidth])\n      .paddingInner(Math.floor((100 * (barPad * daysToShow)) / chartWidth) / 100)\n      .paddingOuter(0);\n    const barWidth = xScale.bandwidth();\n\n    const barXMidpoints = datesToShow.map((d, i) => {\n      return xScale(i) + barWidth / 2;\n    });\n\n    function makeYScale(extent) {\n      const domain = [0, Math.max(extent[1], filters.per100k ? 0.1 : 10)];\n      if (filters.useLog) {\n        const extentMin = Math.max(extent[0], 0) || (filters.per100k ? 0.01 : 1);\n        // Make sure domain start is small enough such that even really small numbers show a bar\n        domain[0] = 1;\n        while (domain[0] >= extentMin) {\n          domain[0] /= 10;\n        }\n      }\n      return yScaleType().domain(domain).range([chartHeight, 0]).nice();\n    }\n\n    function makeAxis(scale) {\n      const domainMax = scale.domain()[1];\n      let numTicks = 4;\n      if (filters.useLog) {\n        if (filters.per100k) {\n          // numTicks > 2 here can create 10+ ticks\n          numTicks = 3;\n        } else {\n          numTicks = domainMax < 100 ? 1 : domainMax < 1000 ? 2 : domainMax < 10000 ? 3 : 4;\n        }\n      }\n      // Make sure there arent too many ticks (happens particularly often with log scale + per100k)\n      while (scale.ticks(numTicks).length > 5) {\n        numTicks--;\n      }\n      return d3axisLeft(scale)\n        .ticks(numTicks)\n        .tickSizeInner(-chartWidth)\n        .tickSizeOuter(0)\n        .tickFormat((d) => {\n          return formatYTick(d);\n        });\n    }\n    const yScale = makeYScale(extents[field]);\n    const yAxis = makeAxis(yScale);\n\n    const $cells = $svg.selectAll('g.cell');\n\n    // Fill each cell with a chart\n    let counter = 0;\n    $cells.each(function (d, index) {\n      const $cell = d3select(this);\n      const data = groups[index];\n      if (!data) {\n        return;\n      }\n      counter++;\n      const values = data.values;\n\n      // Add baseline\n      $cell\n        .append('line')\n        .attr('class', 'baseline')\n        .attr('y1', chartHeight)\n        .attr('y2', chartHeight)\n        .attr('x2', chartWidth);\n\n      // Add axis\n      let cellYScale = yScale;\n      let cellYAxis = yAxis;\n      if (!filters.consistentY) {\n        let extent = d3extent(values, (d) => d[field]);\n        // Account for moving average values in extent\n        if (fieldHasMovingAverage[field]) {\n          const maField = maKey(field);\n          const maExtent = d3extent(values, (d) => d[maField]);\n          extent = d3extent(extent.concat(maExtent));\n        }\n        cellYScale = makeYScale(extent);\n        cellYAxis = makeAxis(cellYScale);\n      }\n\n      $cell.append('g').attr('transform', 'translate(0,0)').call(cellYAxis);\n\n      let stackFields;\n      if (isTestingData) {\n        stackFields =\n          filters.field === 'newTests' ? ['newPositive', 'newNegative'] : ['positive', 'negative'];\n        if (filters.per100k) {\n          stackFields = stackFields.map(per100kKey);\n        }\n      } else {\n        stackFields = [field];\n      }\n\n      function renderLine(yProperty, classes) {\n        const xOffset = barWidth / 2;\n        const line = d3line()\n          .x((d, i) => Math.round(xScale(i) + xOffset))\n          .y((d) => {\n            const y = Math.min(Math.floor(cellYScale(d[yProperty])), chartHeight);\n            return Number.isNaN(y) ? chartHeight : y;\n          })\n          .curve(d3curveMonotoneX);\n\n        $cell.append('path').attr('class', classes).datum(values).attr('d', line);\n      }\n\n      // Only render bars if there's enough room for them\n      if (xScale.bandwidth() >= 1) {\n        const stack = d3stack().keys(stackFields)(values);\n        const $layers = $cell\n          .selectAll('g.layer')\n          .data(stack, (d) => d.key)\n          .enter()\n          .append('g')\n          .attr('class', (d, i) => {\n            return `layer layer-${i + 1} layer-${d.key}`;\n          });\n\n        $layers\n          .selectAll('.bar')\n          .data(\n            (l) => l,\n            (d) => String(d.data.date.getTime()),\n          )\n          .enter()\n          .append('rect')\n          .attr('class', 'bar')\n          .attr('width', barWidth)\n          .attr('x', (d, i) => xScale(i))\n          .attr('y', (d) => {\n            const y = cellYScale(d[1]);\n            return Number.isNaN(y) ? chartHeight : y;\n          })\n          .attr('height', (d) => {\n            const y = Math.max(chartHeight - cellYScale(d[1] - d[0]), 0);\n            return Number.isNaN(y) ? 0 : y;\n          });\n      } else if (!fieldHasMovingAverage[field]) {\n        // If there's not enough room for bars, and there's no moving-average data, render a line chart instead\n        renderLine(field, 'chart-line');\n      }\n\n      if (fieldHasMovingAverage[field]) {\n        renderLine(maKey(field), 'chart-line ma-line');\n      } else {\n        $cell.selectAll('.ma-line').remove();\n      }\n\n      const $crosshair = $cell\n        .append('line')\n        .attr('y1', 0)\n        .attr('y2', chartHeight)\n        .attr('class', 'crosshair crosshair-hidden');\n\n      function onMouseMove() {\n        const evt = d3event;\n        const mouse = d3mouse(this);\n        const xPos = mouse[0];\n        const bisectIndex = d3bisectLeft(barXMidpoints, xPos);\n        const left = barXMidpoints[bisectIndex - 1];\n        const right = barXMidpoints[bisectIndex];\n        const index =\n          left == undefined || Math.abs(xPos - right) < Math.abs(xPos - left)\n            ? bisectIndex\n            : bisectIndex - 1;\n        const date = datesToShow[index];\n        const value = values.find((v) => v.date.getTime() === date.getTime());\n        if (value && (value !== tooltipValue || !tooltipShown)) {\n          const chPos = Math.round(xScale(index) + barWidth / 2);\n          $crosshair.attr('x1', chPos).attr('x2', chPos).classed('crosshair-hidden', false);\n          showChartTooltip({value, field, evt, allowDrilldown: allowDrilldown && !isTestingData});\n        }\n      }\n\n      function onClick() {\n        if (allowDrilldown) {\n          setStateFilter(data.key);\n          scrollUpTo('#viz');\n        }\n      }\n\n      const $hover = $cell\n        .append('rect')\n        .attr('class', 'pointer')\n        .attr('width', chartWidth)\n        .attr('height', chartHeight);\n\n      // Touch device events are slightly different\n      if (isTouchDevice) {\n        $hover.on('click', () => {\n          // Dont let this bubble up to document click\n          d3event.stopPropagation();\n          onMouseMove.call(this);\n        });\n      } else {\n        $hover.on('mousemove', onMouseMove).on('click', onClick);\n      }\n      $cell.on('mouseleave', () => {\n        $crosshair.classed('crosshair-hidden', true);\n        hideTooltipSoon();\n      });\n\n      // Add label above other elements to make it clickable\n      $cell\n        .append('text')\n        .text(groups.length > 1 ? `${counter}. ${data.key}` : data.key)\n        .attr('x', cellLabelX)\n        .attr('y', cellLabelY)\n        .attr('class', 'cell-label')\n        .on('click', onClick);\n\n      if (filters.per100k && data.noPopulation) {\n        $cell\n          .append('text')\n          .text('No population data')\n          .attr('x', chartWidth / 2)\n          .attr('y', chartHeight / 2)\n          .attr('class', 'cell-label-nopop');\n      }\n    });\n\n    // Add start dates\n    const endDate = last(groups[0].values).date;\n    const startDate = new Date(endDate);\n    startDate.setDate(startDate.getDate() - daysToShow + 1);\n\n    $cells\n      .append('text')\n      .attr('class', 'x-tick x-tick-start')\n      .attr('text-anchor', 'start')\n      .attr('x', 0)\n      .attr('y', chartHeight + 4)\n      .text(formatXDate(startDate));\n\n    $cells\n      .append('text')\n      .attr('class', 'x-tick x-tick-end')\n      .attr('text-anchor', 'end')\n      .attr('x', chartWidth)\n      .attr('y', chartHeight + 4)\n      .text(formatXDate(endDate));\n  }\n\n  function showMapTooltip(options) {\n    const {value} = options;\n    showTooltip({\n      ...options,\n      title: value.label,\n      subtitle: timeLabels[filters.time],\n      fieldLabels: mapDataPointLabels,\n    });\n  }\n\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24;\n  function dateDiffInDays(b, a) {\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n  }\n\n  function showChartTooltip(options) {\n    const {value} = options;\n    showTooltip({\n      ...options,\n      title: formatTooltipDate(value.date),\n      fieldLabels: dataPointLabels,\n    });\n  }\n\n  function showTooltip(options) {\n    clearTimeout(tooltipHideTimer);\n    const {value, field, evt, allowDrilldown, title, subtitle, fieldLabels} = options;\n    tooltipValue = value;\n    tooltipShown = true;\n    const pageX = evt.pageX;\n    const pageY = evt.pageY;\n    const clientY = evt.clientY;\n    const pad = 10;\n    const css = {left: '', right: '', top: '', bottom: '', transform: ''};\n    const winWidth = window.innerWidth;\n    const winHeight = window.innerHeight;\n    const bodyHeight = document.body.getBoundingClientRect().height;\n\n    const fitsLeft = pageX - 250 > 0;\n    const fitsRight = pageX + 250 < winWidth;\n    const fitsTop = clientY - 250 > 0;\n    const fitsBottom = clientY - 250 < winHeight;\n\n    if (fitsTop) {\n      css.bottom = `${bodyHeight - pageY + pad}px`;\n    } else {\n      css.top = `${pageY + pad}px`;\n    }\n\n    if (fitsRight) {\n      css.left = `${pageX + pad}px`;\n    } else if (fitsLeft) {\n      css.right = `${winWidth - pageX + pad}px`;\n    } else if (fitsTop || !fitsBottom) {\n      css.left = pageX;\n      css.transform = 'translateX(-50%)';\n      css.bottom = `${bodyHeight - pageY + pad}px`;\n    } else if (fitsBottom) {\n      css.left = pageX;\n      css.transform = 'translateX(-50%)';\n      css.top = `${pageY + pad}px`;\n    }\n\n    const hasPercents = isTestingData;\n    const columnClass = hasPercents ? 'col-3' : 'col-2';\n\n    let dataPoints;\n    if (filters.field === 'tests') {\n      dataPoints = [\n        {key: 'positive', color: 'primary1', pct: value.positivePct},\n        {key: 'negative', color: 'primary2', pct: value.negativePct},\n        {key: 'pending', pct: value.pendingPct},\n        {key: 'tests'},\n        {key: 'cases'},\n        {key: 'deaths'},\n      ];\n    } else if (filters.field === 'newTests') {\n      dataPoints = [\n        {key: 'newPositive', color: 'primary1', pct: value.newPositivePct},\n        {key: 'newNegative', color: 'primary2', pct: value.newNegativePct},\n        {key: 'newTests'},\n        {key: 'newCases'},\n        {key: 'newDeaths'},\n      ];\n    } else {\n      dataPoints = ['cases', 'deaths', 'newCases', 'newDeaths'].map((k) => ({\n        key: k,\n        color: k === field ? 'primary1' : null,\n      }));\n    }\n    if (filters.per100k) {\n      dataPoints = dataPoints.map((dp) => ({\n        ...dp,\n        key: per100kKey(dp.key),\n        suffix: ' per 100k',\n        formatter: formatPer100kValue,\n      }));\n      if (value.pop != undefined) {\n        dataPoints.push({\n          key: 'pop',\n        });\n      }\n    }\n    const dataPointEl = dataPoints.map((dp) => {\n      const format = dp.formatter || formatTooltipValue;\n      const dpValue = value[dp.key];\n      if (dpValue == undefined) {\n        return '';\n      }\n      return `\n        \t<div class=\"tooltip-dp-label ${dp.color || ''}\">${fieldLabels[dp.key]}</div>\n        \t<div class=\"tooltip-dp-val\">${format(dpValue)}${dp.suffix || ''}</div>\n          ${\n            hasPercents\n              ? `\n            <div class=\"tooltip-dp-pct\">\n              ${formatTooltipPct(dp.pct)}\n            </div>\n          `\n              : ''\n          }\n        \t`;\n    });\n\n    const drilldownMsg = allowDrilldown\n      ? '<div class=\"tooltip-drill\"><span class=\"click\">Click</span><span class=\"tap\">Tap</span><span> to see counties</span></div>'\n      : '';\n\n    $('#tooltip')\n      .addClass('shown')\n      .toggleClass('clickable', allowDrilldown)\n      .css(css)\n      .html(\n        `<div><h4>${title}</h4>\n        ${subtitle ? `<h5>${subtitle}</h5>` : ''}\n              <div class=\"tooltip-grid ${columnClass}\">\n                ${dataPointEl.join('')}\n              </div>\n              ${drilldownMsg}</div>`,\n      );\n  }\n\n  // Sometimes we want to delay hiding to allow user to click into tooltip before it hides (i.e. on mobile)\n  function hideTooltipSoon() {\n    // Long delay needed for iOS safari, otherwise tooltip hides\n    tooltipHideTimer = setTimeout(hideTooltip, isTouchDevice ? 500 : 50);\n  }\n  function hideTooltip() {\n    $('#tooltip').removeClass('shown');\n    tooltipShown = false;\n  }\n\n  function formatXDate(d) {\n    return d.toLocaleString('default', {month: 'short', day: 'numeric'});\n  }\n\n  function formatTooltipDate(d) {\n    return d.toLocaleString('default', {year: 'numeric', month: 'long', day: 'numeric'});\n  }\n\n  function formatYTick(n) {\n    const str = formatNumNice(n);\n    return str.replace(/^0\\./, '.');\n  }\n\n  function formatNumNice(n, precision) {\n    let abbrev;\n    if (n >= 1e6) {\n      n = n / 1e6;\n      abbrev = 'm';\n    } else if (n >= 1e3) {\n      n = n / 1e3;\n      abbrev = 'k';\n    }\n    if (precision !== undefined) {\n      // Need to parseFloat again to avoid scientific notation\n      n = parseFloat(n.toPrecision(precision));\n    }\n    return abbrev ? `${n}${abbrev}` : String(n);\n  }\n\n  const tooltipFmtPer100k = d3format(',.1f');\n  const tooltipFmtPer100kSmall = d3format(',.2f');\n  function formatPer100kValue(n) {\n    return n >= 1 ? tooltipFmtPer100k(n) : tooltipFmtPer100kSmall(n);\n  }\n\n  const tooltipFmt = d3format(',d');\n  function formatTooltipValue(n) {\n    return tooltipFmt(n);\n  }\n\n  function formatMapLegendTick(n) {\n    return formatNumNice(n, 2);\n  }\n\n  const pctFmt = d3format('.1%');\n  function formatTooltipPct(n) {\n    return n != undefined ? `(${pctFmt(n)})` : '';\n  }\n\n  function setStateFilter(state) {\n    router.push({[filterKeys.state]: state});\n  }\n\n  function scrollUpTo(selector) {\n    const el = document.querySelector(selector);\n    if (!el || !el.scrollIntoView) {\n      window.scrollTo(0, 0);\n    }\n    // Only scroll _up_ to target\n    if (el.getBoundingClientRect().top >= 0) {\n      return;\n    }\n    el.scrollIntoView({behavior: 'smooth', block: 'start'});\n  }\n\n  function attachEvents() {\n    $('#state-select').change(function () {\n      const val = $(this).val();\n      setStateFilter(val);\n    });\n    $('.back-to-states').click(function () {\n      setStateFilter('all');\n      scrollUpTo('#viz-map');\n    });\n    $('#field-select').change(function () {\n      router.push({\n        [filterKeys.field]: $(this).val(),\n      });\n    });\n    $('#time-select').change(function () {\n      router.push({[filterKeys.time]: $(this).val()});\n    });\n    $('#tooltip').click(function (evt) {\n      // Dont let this bubble up to the document.click hide event\n      evt.stopPropagation();\n      if ($(this).is('.clickable') && tooltipValue) {\n        setStateFilter(tooltipValue.state || tooltipValue.label);\n        // Scroll to top if this was a chart (not map) click\n        if (!tooltipValue.label) {\n          scrollUpTo('#viz');\n        }\n      }\n    });\n    $('#cb-use-log-scale').change(function () {\n      const value = $(this).is(':checked');\n      router.push({[filterKeys.useLog]: value ? '1' : '0'});\n    });\n    $('#cb-per-100k').change(function () {\n      const value = $(this).is(':checked');\n      router.push({[filterKeys.per100k]: value ? '1' : '0'});\n    });\n    $('#cb-consistent-y').change(function () {\n      const value = $(this).is(':checked');\n      router.push({[filterKeys.consistentY]: value ? '1' : '0'});\n    });\n    $(document).on('click', function () {\n      hideTooltipSoon();\n    });\n  }\n\n  let loadingCount = 0;\n  function startLoading() {\n    loadingCount++;\n    $('.wrapper').addClass('loading');\n  }\n  function completeLoading() {\n    loadingCount--;\n    if (loadingCount <= 0) {\n      $('.wrapper').removeClass('loading');\n      // Just in case this somehow gets below 0\n      loadingCount = 0;\n    }\n  }\n\n  function renderAllStates() {\n    render({groups: stateData, overview: usData});\n    $('.back-to-states').removeClass('shown');\n    hideTooltip();\n  }\n\n  function renderCounties(state) {\n    const countiesForState = countyData[state];\n\n    const overviewData = stateData.filter((s) => s.key === state);\n    const stateFips = overviewData ? overviewData[0].values[0].fips : null;\n\n    render({\n      groups: countiesForState.counties,\n      overview: overviewData,\n      isCounties: true,\n      stateFips,\n    });\n\n    $('.back-to-states').addClass('shown');\n    hideTooltip();\n  }\n\n  const resizeWindow = throttle(() => {\n    if (lastData) {\n      render(lastData);\n    }\n  }, 100);\n  window.addEventListener('resize', resizeWindow);\n\n  function fetchMapData() {\n    if (!fetchMapData.promise) {\n      fetchMapData.promise = d3json('assets/us-counties.topojson').then((us) => {\n        stateFeatures = topojson.feature(us, us.objects.states).features;\n        stateBorders = topojson.mesh(us, us.objects.states, (a, b) => a !== b);\n        countyFeatures = topojson.feature(us, us.objects.counties).features;\n      });\n    }\n    return fetchMapData.promise;\n  }\n\n  function populateStateSelect(stateData) {\n    if (populateStateSelect.populated) {\n      return;\n    }\n    populateStateSelect.populated = true;\n\n    const stateOptions = stateData\n      .slice(0)\n      .sort((a, b) => a.key.localeCompare(b.key))\n      .map((s) => `<option value=\"${s.key}\">${s.key}</option>`)\n      .join('');\n    $('#state-select').html(`<option value=\"all\" selected>All States</option>${stateOptions}`);\n    if (filters.state !== 'all') {\n      $('#state-select').val(filters.state);\n    }\n  }\n\n  const fetchStatePopulationsMemo = memoizeOne(() => {\n    return new Promise((resolve, reject) => {\n      d3csv('assets/fips-pop-sta.csv')\n        .then((popCsv) => {\n          const popMap = processPopulations(popCsv);\n          resolve(popMap);\n        })\n        .catch(reject);\n    });\n  });\n\n  const fetchCountyPopulationsMemo = memoizeOne(() => {\n    return new Promise((resolve, reject) => {\n      d3csv('assets/fips-pop-cty.csv')\n        .then((popCsv) => {\n          const popMap = processPopulations(popCsv);\n          resolve(popMap);\n        })\n        .catch(reject);\n    });\n  });\n\n  const fetchStateDataMemo = memoizeOne((timeFilter) => {\n    return new Promise((resolve, reject) => {\n      const file = timeFilter === 'all' ? 'all' : '90d';\n      Promise.all([\n        d3csv(\n          `https://raw.githubusercontent.com/schnerd/covid-tracker-data/master/data/state/${file}.csv`,\n        ),\n        fetchStatePopulationsMemo(),\n      ])\n        .then(([csv, statePop]) => {\n          processStates(csv, statePop);\n          populateStateSelect(stateData);\n          resolve();\n        })\n        .catch(reject);\n    });\n  });\n\n  const fetchCountyDataMemo = memoizeOne((state, timeFilter) => {\n    return new Promise((resolve, reject) => {\n      // Need to fetch state data first to make sure state => fips mapping is ready\n      fetchStateData()\n        .then(() => {\n          const timeDir = timeFilter === 'all' ? 'all' : '90d';\n          const fips = stateToFipsMap[state];\n          if (!fips) {\n            reject(new Error(`Could not find fips for state ${state}`));\n            return;\n          }\n\n          Promise.all([\n            d3csv(\n              `https://raw.githubusercontent.com/schnerd/covid-tracker-data/master/data/county/${timeDir}/${fips}.csv`,\n            ),\n            fetchCountyPopulationsMemo(),\n          ])\n            .then(([csv, countyPop]) => {\n              processCounties(csv, countyPop);\n              resolve();\n            })\n            .catch(reject);\n        })\n        .catch(reject);\n    });\n  });\n\n  function fetchStateData() {\n    return fetchStateDataMemo(filters.time);\n  }\n\n  function fetchCountyData(state) {\n    return fetchCountyDataMemo(state, filters.time);\n  }\n\n  function fetchAndRenderStates() {\n    startLoading();\n    fetchStateData()\n      .then(() => {\n        renderAllStates();\n        completeLoading();\n      })\n      .catch((error) => {\n        console.error(error);\n        completeLoading();\n      });\n  }\n\n  function fetchAndRenderCounties(state) {\n    startLoading();\n    fetchCountyData(state)\n      .then(() => {\n        renderCounties(state);\n        completeLoading();\n      })\n      .catch((error) => {\n        console.error(error);\n        completeLoading();\n      });\n  }\n\n  if (filters.state === 'all') {\n    fetchAndRenderStates();\n  } else {\n    fetchAndRenderCounties(filters.state);\n  }\n\n  attachEvents();\n})();\n"],"sourceRoot":""}